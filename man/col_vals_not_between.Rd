% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/col_vals_not_between.R
\name{col_vals_not_between}
\alias{col_vals_not_between}
\title{Are numerical column data not between two specified values?}
\usage{
col_vals_not_between(
  x,
  columns,
  left,
  right,
  inclusive = c(TRUE, TRUE),
  incl_na = FALSE,
  preconditions = NULL,
  brief = NULL,
  actions = NULL
)
}
\arguments{
\item{x}{A data frame, tibble, or an agent object of class \code{ptblank_agent}.}

\item{columns}{The column (or a set of columns, provided as a character
vector) to which this validation should be applied.}

\item{left, right}{The lower and uppers bounds for the range. The validation
Any values \verb{>= left} and \verb{<= right} will be considered as failing.}

\item{inclusive}{A two-element logical value that indicates whether the
\code{left} and \code{right} bounds should be inclusive. By default, both bounds
are inclusive.}

\item{incl_na}{Should \code{NA} values be a part of the condition? This is by
default \code{FALSE}.}

\item{preconditions}{expressions used for mutating the input table before
proceeding with the validation. This is ideally as a one-sided R formula
using a leading \code{~}. In the formula representation, the \code{tbl} serves as the
input data table to be transformed (e.g.,
\code{~ tbl \%>\% dplyr::mutate(col = col + 10)}. A series of expressions can be
used by enclosing the set of statements with \code{{ }} but note that the \code{tbl}
object must be ultimately returned.}

\item{brief}{An optional, text-based description for the validation step.}

\item{actions}{A list containing threshold levels so that the validation step
can react accordingly when exceeding the set levels. This is to be created
with the \code{\link[=action_levels]{action_levels()}} helper function.}
}
\value{
Either a \code{ptblank_agent} object or a table object, depending on what
was passed to \code{x}.
}
\description{
Verification step where column data should not be between two values.
}
\examples{
# Create a simple data frame with
# a column of numerical values
df <-
  data.frame(
    a = c(5.6, 8.2, 6.3, 7.8, 3.4)
  )

# Validate that none of the values 
# in column `a` are between 9 and 10,
# or, between 0 and 2
agent <-
  create_agent(tbl = df) \%>\%
  col_vals_not_between(
    columns = vars(a),
    left = 9, right = 10
  ) \%>\%
  col_vals_not_between(
    columns = vars(a),
    left = 0, right = 2
  ) \%>\%
  interrogate()

# Determine if these column
# validations have all passed by
# using `all_passed()`
all_passed(agent)

}
