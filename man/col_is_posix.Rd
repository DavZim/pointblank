% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/col_is_posix.R
\name{col_is_posix}
\alias{col_is_posix}
\title{Do the columns contain \code{POSIXct} dates?}
\usage{
col_is_posix(
  x,
  column,
  brief = NULL,
  warn_count = NULL,
  stop_count = NULL,
  notify_count = NULL,
  warn_fraction = NULL,
  stop_fraction = NULL,
  notify_fraction = NULL
)
}
\arguments{
\item{x}{A data frame, tibble, or an agent object of class \code{ptblank_agent}.}

\item{column}{The name of a single table column, multiple columns in the same
table, or, a helper function such as \code{\link[=all_cols]{all_cols()}}.}

\item{brief}{An optional, text-based description for the validation step.}

\item{warn_count}{The threshold number for individual
validations returning a \code{FALSE} result before applying the \code{warn} or
\code{notify} flag.}

\item{stop_count}{The threshold number or fraction of \code{FALSE}
validation results before stopping a simple validation or stopping an
agent-based validation.}

\item{notify_count}{The threshold number for individual
validations returning a \code{FALSE} result before applying the \code{warn} or
\code{notify} flag.}

\item{warn_fraction}{The threshold fraction for individual
validations returning a \code{FALSE} over all the entire set of individual
validations. Beyond this threshold, either the \code{warn} or \code{notify} flag will
be applied.}

\item{stop_fraction}{The threshold number or fraction of \code{FALSE}
validation results before stopping a simple validation or stopping an
agent-based validation.}

\item{notify_fraction}{The threshold fraction for individual
validations returning a \code{FALSE} over all the entire set of individual
validations. Beyond this threshold, either the \code{warn} or \code{notify} flag will
be applied.}
}
\value{
Either a \pkg{pointblank} agent object or a table object, depending
on what was passed to \code{x}.
}
\description{
Verification step where a table column is expected to consist entirely of
\code{POSIXct} dates.
}
\examples{
# Create a simple data frame
# with a column containing data
# classed as `POSIXct`
df <-
  data.frame(
    a = as.POSIXct(
      strptime(
        "2011-03-27 01:30:00",
        "\%Y-\%m-\%d \%H:\%M:\%S")
      )
  )

# Validate that column `a` in
# the data frame is classed as
# `POSIXct`
agent <-
  create_agent(tbl = df) \%>\%
  col_is_posix(column = a) \%>\%
  interrogate()

# Determine if this column
# validation has passed by
# using `all_passed()`
all_passed(agent)

}
