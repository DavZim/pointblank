% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/col_is_date.R
\name{col_is_date}
\alias{col_is_date}
\title{Do the columns contain R \code{Date} objects?}
\usage{
col_is_date(
  x,
  column,
  brief = NULL,
  warn_count = NULL,
  stop_count = NULL,
  notify_count = NULL,
  warn_fraction = NULL,
  stop_fraction = NULL,
  notify_fraction = NULL
)
}
\arguments{
\item{x}{A data frame, tibble, or an agent object of class \code{ptblank_agent}.}

\item{column}{The column (or a set of columns, provided as a character
vector) to which this validation should be applied.}

\item{brief}{An optional, text-based description for the validation step.}

\item{warn_count}{The threshold number for individual
validations returning a \code{FALSE} result before applying the \code{warn} or
\code{notify} flag.}

\item{stop_count}{The threshold number or fraction of \code{FALSE}
validation results before stopping a simple validation or stopping an
agent-based validation.}

\item{notify_count}{The threshold number for individual
validations returning a \code{FALSE} result before applying the \code{warn} or
\code{notify} flag.}

\item{warn_fraction}{The threshold fraction for individual
validations returning a \code{FALSE} over all the entire set of individual
validations. Beyond this threshold, either the \code{warn} or \code{notify} flag will
be applied.}

\item{stop_fraction}{The threshold number or fraction of \code{FALSE}
validation results before stopping a simple validation or stopping an
agent-based validation.}

\item{notify_fraction}{The threshold fraction for individual
validations returning a \code{FALSE} over all the entire set of individual
validations. Beyond this threshold, either the \code{warn} or \code{notify} flag will
be applied.}
}
\value{
Either a \code{ptblank_agent} object or a table object, depending on what
was passed to \code{x}.
}
\description{
Verification step where a table column is expected to consist entirely of R
\code{Date} objects.
}
\examples{
# Create a simple data frame with
# a column of `Date` values
df <-
  data.frame(
    a = as.Date("2017-08-15")
  )

# Validate that column `a` in the
# data frame is classed as `Date`
agent <-
  create_agent(tbl = df) \%>\%
  col_is_date(column = vars(a)) \%>\%
  interrogate()

# Determine if these column
# validations have all passed
# by using `all_passed()`
all_passed(agent)

}
