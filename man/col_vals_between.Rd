% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/col_vals_between.R
\name{col_vals_between}
\alias{col_vals_between}
\title{Are numerical column data between two specified values?}
\usage{
col_vals_between(
  x,
  column,
  left,
  right,
  inclusive = c(TRUE, TRUE),
  incl_na = FALSE,
  preconditions = NULL,
  brief = NULL,
  warn_count = NULL,
  stop_count = NULL,
  notify_count = NULL,
  warn_fraction = NULL,
  stop_fraction = NULL,
  notify_fraction = NULL
)
}
\arguments{
\item{x}{A data frame, tibble, or an agent object of class \code{ptblank_agent}.}

\item{column}{The column (or a set of columns, provided as a character
vector) to which this validation should be applied. Aside from a single
column name, column operations can be used to create one or more computed
columns (e.g., \code{a + b} or \code{a + sum(a)}).}

\item{left}{The lower bound for the range. The validation includes this bound
value in addition to values greater than \code{left}.}

\item{right}{The upper bound for the range. The validation includes this
bound value in addition to values lower than \code{right}.}

\item{inclusive}{A two-element logical value that indicates whether the
\code{left} and \code{right} bounds should be inclusive. By default, both bounds
are inclusive.}

\item{incl_na}{Should \code{NA} values be a part of the condition? This is by
default \code{FALSE}.}

\item{preconditions}{expressions used for mutating the input table before
proceeding with the validation. This is ideally as a one-sided R formula
using a leading \code{~}. In the formula representation, the \code{tbl} serves as the
input data table to be transformed (e.g.,
\code{~ tbl \%>\% dplyr::mutate(col = col + 10)}. A series of expressions can be
used by enclosing the set of statements with \code{{ }} but note that the \code{tbl}
object must be ultimately returned.}

\item{brief}{An optional, text-based description for the validation step.}

\item{warn_count}{The threshold number for individual
validations returning a \code{FALSE} result before applying the \code{warn} or
\code{notify} flag.}

\item{stop_count}{The threshold number or fraction of \code{FALSE}
validation results before stopping a simple validation or stopping an
agent-based validation.}

\item{notify_count}{The threshold number for individual
validations returning a \code{FALSE} result before applying the \code{warn} or
\code{notify} flag.}

\item{warn_fraction}{The threshold fraction for individual
validations returning a \code{FALSE} over all the entire set of individual
validations. Beyond this threshold, either the \code{warn} or \code{notify} flag will
be applied.}

\item{stop_fraction}{The threshold number or fraction of \code{FALSE}
validation results before stopping a simple validation or stopping an
agent-based validation.}

\item{notify_fraction}{The threshold fraction for individual
validations returning a \code{FALSE} over all the entire set of individual
validations. Beyond this threshold, either the \code{warn} or \code{notify} flag will
be applied.}
}
\value{
Either a \pkg{pointblank} agent object or a table object, depending
on what was passed to \code{x}.
}
\description{
Verification step where column data should be between two values.
}
\examples{
# Create a simple data frame
# with a column of numerical
# values
df <-
  data.frame(
    a = c(5.6, 8.2, 6.3, 7.8, 3.4)
  )

# Validate that values in
# column `a` are all between
# 1 and 9
agent <-
  create_agent(tbl = df) \%>\%
  col_vals_between(
    column = a,
    left = 1,
    right = 9
  ) \%>\%
  interrogate()

# Determine if this column
# validation has passed by using
# `all_passed()`
all_passed(agent)

}
